@inject AbpBlazorMessageLocalizerHelper<HomeSystemResource> LH
@inherits HomeSystemCrudPageBase<IFileStoreAppService, FileStoreDto, Guid, FileStoreSearchRequestDto, FileStoreDto>
<Container Fluid Margin="Margin.Is0" Padding="Padding.Is0">
    <Row Margin="Margin.Is0" Padding="Padding.Is0">
        <Column ColumnSize="ColumnSize.Is12.OnMobile.Is7.OnTablet.Is8.OnDesktop" VerticalAlignment="VerticalAlignment.Middle" Padding="Padding.Is2" Display="Display.None.OnMobile.InlineBlock.OnTablet">
            <Text TextAlignment="TextAlignment.Start" VerticalAlignment="VerticalAlignment.TextBottom" TextOverflow="TextOverflow.Truncate">@UpdateHeadingMessage()</Text>
        </Column>
        <Column ColumnSize="ColumnSize.Is12.OnMobile.Is5.OnTablet.Is4.OnDesktop" Margin="Margin.Is0" Padding="Padding.Is2">
            <Button Color="Color.Default" Float="Float.End" Border="Border.Is1" title="Refresh" Size="Size.Medium" Visibility="Visibility.Visible" Clicked="@RefreshClick"><Icon Name="IconName.Redo" /></Button>
            <Button Color="Color.Default" Float="Float.End" Border="Border.Is1" title="Delete File" Size="Size.Medium" Visibility="@CheckBtnDeleteFileVisibilty()" Clicked="@DeleteFilesClick"><Icon Name="IconName.Delete" /></Button>
            <Button Color="Color.Default" Float="Float.End" Border="Border.Is1" title="Rename File" Size="Size.Medium" Visibility="@CheckBtnEditFileVisibilty()" Clicked="@EditFilesClick"><Icon Name="IconName.Pen" /></Button>
            <Button Color="Color.Default" Float="Float.End" Border="Border.Is1" title="Add Files" Size="Size.Medium" Visibility="@CheckbtnAddFileVisibility()" Clicked="OpenCreateModalAsync"><Icon Name="IconName.Add" /></Button>
        </Column>
    </Row>
    <Row Style="height:85vh" Margin="Margin.Is0" Padding="Padding.Is0">
        <Column ColumnSize="ColumnSize.Is12" Overflow="Overflow.Auto" Background="Background.Secondary" Margin="Margin.Is0" Padding="Padding.Is2">
            <DataGrid TItem="FileStoreDto"
                      Data="@Entities"
                      ShowPager="false"
                      @bind-SelectedRow="@selectedFile"
                      SelectionMode="DataGridSelectionMode.Multiple"
                      @bind-SelectedRows="@selectedFiles"
                      Responsive Style="min-width:820px; max-width:2148px">
                <DataGridMultiSelectColumn TItem="FileStoreDto" Width="30px"></DataGridMultiSelectColumn>
                <DataGridColumn TItem="FileStoreDto" Field="@nameof(FileStoreDto.Name)" Caption="@L[HomeSystemResource.Features.Files.DTFX.Columns.Name]" Editable>
                    <DisplayTemplate>
                        <ContextMenuTrigger MenuId="myFileItemMenu" Data="@context.Id">
                            @context.Name
                        </ContextMenuTrigger>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="FileStoreDto" Field="@nameof(FileStoreDto.ExtName)" Caption="@L[HomeSystemResource.Features.Files.DTFX.Columns.ExtName]" Editable />
                <DataGridColumn TItem="FileStoreDto" Field="@nameof(FileStoreDto.Size)" Caption="@L[HomeSystemResource.Features.Files.DTFX.Columns.Size]" Readonly />
                <DataGridColumn TItem="FileStoreDto" Field="@nameof(FileStoreDto.Description)" Caption="@L[HomeSystemResource.Features.Files.DTFX.Columns.Description]" Editable />
                <DataGridColumn TItem="FileStoreDto" Field="@nameof(FileStoreDto.MIMETypes.Description)" Caption=@L[HomeSystemResource.Features.Files.DTFX.Columns.ContentType] Readonly>
                    <DisplayTemplate>
                        @(context.MIMETypes!= null ? context.MIMETypes.Description : "")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridDateColumn TItem="FileStoreDto"
                                    Field="@nameof(FileStoreDto.CreatorDate)"
                                    Caption="@L[HomeSystemResource.Common.Fields.CreationTime]">
                    <DisplayTemplate>
                        @context.CreatorDate.ToLongDateString()
                    </DisplayTemplate>
                </DataGridDateColumn>
                <DataGridDateColumn TItem="FileStoreDto"
                                    Field="@nameof(FileStoreDto.ModifierDate)"
                                    Caption="@L[HomeSystemResource.Common.Fields.LastModificationTime]">
                    <DisplayTemplate>
                        @(context.ModifierDate?.ToLongDateString() ?? string.Empty)
                    </DisplayTemplate>
                </DataGridDateColumn>
            </DataGrid>
        </Column>
    </Row>
</Container>
<Modal @ref="@CreateModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L[HomeSystemResource.Common.Caption.AddRecord_Formated,L[HomeSystemResource.Features.Files.Prefix]]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>@L[HomeSystemResource.Features.Files.DTFX.Columns.UploadFiles]</FieldLabel>
                    <FileEdit Multiple Changed="@OnFileUploadChanged" Progressed="@OnProgressed" MaxFileSize="@HomeSystemConsts.maxFileSize" @ref="@createNewFileEdit" />
                    <Progress Visibility="@create_progressbarVisibility" @ref="@createNewProgress">
                        <ProgressBar Value="@((int)create_uploadpercent)" Margin="Margin.Is2" />
                    </Progress>
                </Field>
                <Field>
                    <ListGroup>
                        @foreach (var item in uploadFileList)
                        {
                            <ListGroupItem TextColor="TextColor.Success">@item.FileName</ListGroupItem>
                        }
                    </ListGroup>
                    <Divider DividerType="DividerType.TextContent" Text="Failure" />
                    <ListGroup>
                        @foreach (var item in failureFileList)
                        {
                            <ListGroupItem TextColor="TextColor.Danger">
                                <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                                    <Heading Size="HeadingSize.Is5" Margin="Margin.Is1.FromBottom" TextColor="TextColor.Primary">@item.FileName</Heading>
                                    <Small TextColor="TextColor.Danger">@item.Message</Small>
                                </Div>
                            </ListGroupItem>
                        }
                    </ListGroup>
                </Field>
                <Field>
                    <Switch TValue="bool" @bind-Checked="@NewEntity.IsPublic">@L[HomeSystemResource.Common.Public]</Switch>
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">
                    @L[HomeSystemResource.Buttons.Cancel]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        Disabled="@ChcekIsCanAdd(true)"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">
                    @L[HomeSystemResource.Buttons.Save]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
<Modal @ref="@EditModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@((EditingEntity?.Name??"")+(EditingEntity?.ExtName??""))</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L[HomeSystemResource.Features.Files.DTFX.Columns.Name]</FieldLabel>
                            <TextEdit Text="@EditingEntity.Name" TextChanged="@EditingFileName_TextChanged">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L[HomeSystemResource.Features.Files.DTFX.Columns.ExtName]</FieldLabel>
                            <TextEdit Text="@EditingEntity.ExtName" TextChanged="@EditingFileExtName_TextChanged">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L[HomeSystemResource.Features.Files.DTFX.Columns.Description]</FieldLabel>
                            <TextEdit Text="@EditingEntity.Description" TextChanged="@EditingFileDescription_TextChanaged">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L[HomeSystemResource.Features.Files.DTFX.Columns.UploadFiles]</FieldLabel>
                            <FileEdit Changed="@OnUpdateFileUploadChanged" MaxFileSize="@HomeSystemConsts.maxFileSize" Progressed="@UpdateOnProgressed" @ref="@updateNewFileEdit" />
                            <Progress Visibility="@update_progressbarVisibility" @ref="@updateNewProgress">
                                <ProgressBar Value="@((int)update_uploadpercent)" Margin="Margin.Is2" />
                            </Progress>
                        </Field>
                    </Validation>
                </Validations>
                <Field>
                    <Switch TValue="bool" Checked="@EditingEntity.IsPublic" CheckedChanged="@EditingIsPublic_CheckChanaged">@L[HomeSystemResource.Common.Public]</Switch>
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">
                    @L[HomeSystemResource.Buttons.Cancel]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Disabled="@ChcekIsCanAdd(false)"
                        Clicked="UpdateEntityAsync">
                    @L[HomeSystemResource.Buttons.Save]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
<ContextMenu Id="myFileItemMenu">
    <Item OnClick="@OnContextMenuItemClick"><Icon Name="IconName.FolderPlus" /> 下載 </Item>
</ContextMenu>


