@page
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageToolbar
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageSearchBox

@inherits Ediux.HomeSystem.Web.HomeSystemPageBase
@model Ediux.HomeSystem.Web.Pages.PluginsManager.IndexModel
@{
    PageLayout.Content.Title = L[HomeSystemResource.Menu.PluginsManager].Value;
    PageLayout.Content.BreadCrumb.Add(L[HomeSystemResource.Features.PluginsManager.Prefix].Value);
    PageLayout.Content.MenuItemName = HomeSystemMenus.PluginsManager;
}


@section scripts {
<abp-script src="/Pages/PluginsManager/index.js" />
}

@section content_toolbar {
    @await Component.InvokeAsync(typeof(AbpPageToolbarViewComponent), new { pageName = typeof(Ediux.HomeSystem.Web.Pages.PluginsManager.IndexModel).FullName })
}

<abp-card class="mb-4">
    <abp-card-body>
        <div id="PluginsManagerWrapper">
            <abp-row>
                <abp-column>
                    @await Component.InvokeAsync(typeof(AbpPageSearchBoxViewComponent))
                </abp-column>
            </abp-row>
        </div>
    </abp-card-body>
</abp-card>

<abp-card>
    <abp-card-body>
        <abp-table striped-rows="true" id="PluginsManagerKeyTable"  class="nowrap"></abp-table>
    </abp-card-body>
</abp-card>



@*<abp-card>
    <abp-card-header>@L[HomeSystemResource.Menu.PluginsManager]</abp-card-header>
    <abp-card-body>
        <abp-table id="dt-list" striped-rows="true" border-style="Bordered" />
    </abp-card-body>
</abp-card>
@section styles {
    <abp-style-bundle name="@HomeSystemBundles.Styles.jqDT_BS4" />
}
@section scripts {
    <abp-script-bundle name="@HomeSystemBundles.Scripts.DataGrid" />

    <script>
        $(function () {
            const endpoint = "/api/plugins";
            const trueFalseOptions = ["false", "true"];
            const trueFalseOptionsText = ["啟用", "停用"]
            $('#dt-list').DataTableEdit({
                ajax: {
                    url: endpoint + '/list',
                    contentType: "application/json",
                    type: "POST",
                    data: function (d) {
                        return JSON.stringify(d);
                    }
                },
                buttons: [
                    {
                        extend: 'selected',
                        text: '<i class="fa fa-trash mr-1"></i> @L[HomeSystemResource.Buttons.Delete]',
                        name: 'delete',
                        className: 'btn-danger btn-sm mr-1'
                    },
                    {
                        extend: 'selected',
                        text: '<i class="fa fa-edit mr-1"></i> @L[HomeSystemResource.Buttons.Edit]',
                        name: 'edit',
                        className: 'btn-warning btn-sm mr-1'
                    },
                    {
                        text: '<i class="fa fa-plus mr-1"></i> @L[HomeSystemResource.Features.PluginsManager.Buttons.AddPlugins]',
                        name: 'add',
                        className: 'btn-info btn-sm mr-1'
                    }
                ],
                columns: [
                    {
                        title: "Id", data: "id", type: "hidden", visible: false
                    },
                    {
                        title: "CreatorId", data: "creatorId", type: "hidden", visible: false
                    },
                    {
                        title: "Creation Time", data: "creationTime", type: "hidden", visible: false
                    },
                    {
                        title: "@L[HomeSystemResource.Features.PluginsManager.DTFX.Columns.Name]", data: "name", type: "readonly"
                    },
                    {
                        title: "@L[HomeSystemResource.Features.PluginsManager.DTFX.Columns.Disabled]", data: "disabled", type: "select",
                        options: trueFalseOptions,
                        optionstext: trueFalseOptionsText,
                        render: function (data, type) {
                            console.log(type);

                            if (type === 'display') {
                                return `${data ? "停用" : "啟用"}`;
                            }
                            return data;
                        }
                    },
                    {
                        title: "@L[HomeSystemResource.Features.PluginsManager.DTFX.Columns.AssemblyPath]",
                        upload: "assemblyFile",
                        data: "pluginPath",
                        defaultContent: "",
                        type: "file",
                        accept: ".dll,.zip"
                    }
                ],
                onAddRow: function (table, rowdata, success, error) {
                    ediux.homeSystem.endPoints.pluginsEndpoint.create(table.formData)
                        .then(result => {
                            success();
                        })
                        .catch(err => {
                            error();
                        });
                    //$.ajax({
                    //    url: endpoint,
                    //    contentType: "multipart/form-data",
                    //    type: "POST",
                    //    data: table.formData,
                    //    processData: false,
                    //    contentType: false,
                    //    success: success,
                    //    error: error
                    //});
                },
                onDeleteRow: function (table, rowdata, success, error) {
                    $.ajax({ url: endpoint, type: 'DELETE', data: rowdata, success: success, error: error });
                },
                onEditRow: function (table, rowdata, success, error) {
                    $.ajax({
                        url: endpoint,
                        contentType: "multipart/form-data",
                        type: "PUT",
                        data: table.formData,
                        processData: false,
                        contentType: false,
                        success: function () {
                            abp.message.success("更新成功!系統將於5秒後重新啟動...");

                            $.ajax({
                                url: 'api/reboot',
                                contentType: "application/json",
                                type: "GET",
                                success: function () {
                                    setTimeout(function () {
                                        document.location.href = '@Url.Content("~/")';
                                    }, 5000);
                                },
                                error: error
                            });

                            if (success) {
                                success();
                            }
                        },
                        error: error
                    });
                }
            });
        });
    </script>
}
*@